{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Prometheus-X's quest for interoperability","text":"<p>This documentation hub serves as the central place for ideas and discussions around making Prometheus-X as interoperable as possible by pushing for alignment with IDSA protocols, Gaia-X specifications &amp; a minimal compatibility with the EDC.</p>"},{"location":"#get-started","title":"Get Started","text":"<ul> <li>Contract</li> </ul>"},{"location":"catalog/","title":"Aligning the catalog","text":"<p>\ud83d\udea7 Template page. WIP.</p>"},{"location":"consent/","title":"Integrating the consent","text":"<p>This section documents the necessary augmentations to propose to governance entities (IDSA, DSSC, GAIA-X) in order to include consent management in supported protocols.</p>"},{"location":"contract/","title":"Aligning the contract","text":""},{"location":"contract/#current","title":"Current","text":"<p>The current model for the contract in Prometheus-X works as a centralized service entity which manages:</p> <ul> <li>P2P contract generation</li> <li>Ecosystem contract generation</li> <li>ODRL policy injection</li> <li>Contract signature</li> </ul>"},{"location":"contract/#goal","title":"Goal","text":"<p>To expand reach and compatibility with more projects and partners, it will be needed to have a deeper alignment in how this aligns with IDSA's contract negotiation protocol.</p> <p>This push towards alignment will get us closer to</p> <ul> <li>Having a fully IDSA compliant building block for contract</li> <li>Having compatibility with EDC connectors</li> <li>Having PTX components included in more projects</li> </ul>"},{"location":"contract/#requirements-for-idsa","title":"Requirements for IDSA","text":"<p>There are 2 different elements to think about in regards to alignment with IDSA Contract Protocol</p> <ul> <li>Adapting an implementation for PTX</li> <li>Integrating the IDS Negotiation Protocol in the PDC</li> </ul>"},{"location":"contract/contract-connector-requirements/","title":"Contract: Connector Requirements","text":"<p>In order for the Prometheus-X Dataspace Connector to align properly and be compliant with the IDS Dataspace Protocol and IDS-compliant connectors, there is a strong need to add a layer for contract management directly in the connector.</p>"},{"location":"contract/contract-connector-requirements/#integration-in-the-connector","title":"Integration in the connector","text":"<p>Within the connector, the IDS Negotiation Protocol should be directly implemented in order to allow negotiation and contractualisation between 2 connectors for bilateral contracts.</p> <p>However, in order to remain aligned with Prometheus-X protocols, it should have an extended implementation inside of which the connector would communicate with the centralized contract service to generate, save and sign the negotiated contract.</p> <p>This is necessary as the contracts should still exist and persist in the centralized contract service in order to enforce and authorize Prometheus-X data transfer protocols.</p> <p>\ud83d\udd0eThis could be done through the Mediator Protocol by automating communications with the centralized contract service</p>"},{"location":"contract/contract-connector-requirements/#protocol","title":"Protocol","text":"<p>\ud83d\udea7 This is a WIP protocol and proposition. It is absolutely not a final product. It is just a starting point for further brainstorming.</p> <pre><code>sequenceDiagram\n    participant CC as Consumer Connector\n    participant CCS as Centralized Contract Service\n    participant PC as Provider Connector\n\n    CC-&gt;&gt;PC: Contract Request Message\n    PC-&gt;&gt;CC: ACK\n    PC-&gt;&gt;CC: Contract Offer Message\n    CC-&gt;&gt;PC: ACK\n    CC-&gt;&gt;PC: Contract Agreement Message\n    PC-&gt;&gt;CC: ACK\n    CC-&gt;&gt;PC: Agreement Verification Message\n    PC-&gt;&gt;CC: ACK\n\n    Note over CC, CCS: Interaction with Centralized Contract Service\n    CC-&gt;&gt;CCS: Save Contract Agreement\n    CCS-&gt;&gt;CC: ACK\n\n    PC-&gt;&gt;CCS: Save Contract Agreement\n    CCS-&gt;&gt;PC: ACK\n\n    CC-&gt;&gt;CCS: Agreement Verification Update\n    CCS-&gt;&gt;CC: ACK\n\n    PC-&gt;&gt;CCS: Agreement Verification Update\n    CCS-&gt;&gt;PC: ACK\n\n    PC-&gt;&gt;CC: Finalization Message\n    CC-&gt;&gt;PC: ACK\n\n    Note over CC, CCS: Finalization with Centralized Contract Service\n    PC-&gt;&gt;CCS: Finalization Update\n    CCS-&gt;&gt;PC: ACK\n\n    CC-&gt;&gt;CCS: Finalization Update\n    CCS-&gt;&gt;CC: ACK\n\n    PC-&gt;&gt;CC: Data Transfer \n</code></pre>"},{"location":"contract/mediator-protocol/","title":"Mediator Protocol","text":"<p>This protocol defines an implementation adapted to the PTX centralized contract management solution in order to support in some way the IDS negotiation protocol from the IDSA Dataspace Protocol.</p>"},{"location":"contract/mediator-protocol/#advantages","title":"Advantages","text":""},{"location":"contract/mediator-protocol/#storage","title":"Storage","text":"<p>The IDS negotiation protocol does not assume any specific solution in order to store negotiation / contract objects. The centralized contract manager is aimed to work with a persistent layer (currently a Mongo Database) which would be ready directly to persist these objects and save the trouble from participants or connectors.</p>"},{"location":"contract/mediator-protocol/#trusted-third-party-monitoring","title":"Trusted third party monitoring","text":"<p>Having a centralized service that is trusted / certified in the dataspace enables to have the protocol interactions be logged and monitored by a trusted entity that is not directly tied to the participants. </p> <p>Participants could potentially be able to question the dataspace governance authority in place to request logs, audits and conflict resolutions.</p>"},{"location":"contract/mediator-protocol/#ecosystem-contracts","title":"Ecosystem contracts","text":"<p>Although the IDS dataspace protocol defines a protocol aimed towards bilateral negotiation only, having the adaptation using the centralized contract entity would enable to also expand on the protocol to support ecosystem contracts as well.</p>"},{"location":"contract/mediator-protocol/#protocol","title":"Protocol","text":""},{"location":"contract/mediator-protocol/#idea-1-proxy-between-connectors","title":"\ud83d\udca1Idea 1: Proxy Between Connectors","text":"<p>In this first idea, the method of communication for connectors would not be any different than when communicating directly with another connector.</p> <p>Each connector would send and receive the defined protocol messages to and from the centralized contract service.</p> <pre><code>sequenceDiagram\n    participant CC as Consumer Connector\n    participant CCS as Centralized Contract Service\n    participant PC as Provider Connector\n\n    CC-&gt;&gt;CCS: Contract Request Message\n    CCS-&gt;&gt;CC: ACK\n    CCS-&gt;&gt;PC: Contract Request Message\n    PC-&gt;&gt;CCS: ACK\n    PC-&gt;&gt;CCS: Contract Offer Message\n    CCS-&gt;&gt;PC: ACK\n    CCS-&gt;&gt;CC: Contract Offer Message\n    CC-&gt;&gt;CCS: ACK\n    CC-&gt;&gt;CCS: Contract Agreement Message\n    CCS-&gt;&gt;CC: ACK\n    CCS-&gt;&gt;PC: Contract Agreement Message\n    PC-&gt;&gt;CCS: ACK\n    CC-&gt;&gt;CCS: Agreement Verification Message\n    CCS-&gt;&gt;CC: ACK\n    CCS-&gt;&gt;PC: Agreement Verification Message\n    PC-&gt;&gt;CCS: ACK\n    PC-&gt;&gt;CCS: Finalization Message\n    CCS-&gt;&gt;PC: ACK\n    CCS-&gt;&gt;CC: Finalization Message\n    CC-&gt;&gt;CCS: ACK\n</code></pre>"}]}